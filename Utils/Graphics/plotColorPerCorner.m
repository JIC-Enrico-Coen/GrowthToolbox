function h = plotColorPerCorner( vxs, faces, colors, varargin )
%h = plotColorPerCorner( vxs, faces, colors, varargin )
%   VXS is a set of vertex positions in D = 2 or 3 dimensions.
%   FACES is an F*K array, specifying for each of F faces its list of
%   vertex indexes. Each face has up to K corners, with unused elements set
%   to NaN.
%   COLORS is an array containing one color for each corner of each face,
%   listing all the colours for face 1, then all for face 2, etc. It may
%   specify a single value for each corner or RGB coordinates. If K is
%   the number of corners, then COLOR must be either K*1 or K*3.
    
    [oldvxindexes,splitfaces] = splitSharedVertexes( faces );
    facecorners = reshape( splitfaces', [], 1 );
    facecorners(isnan(facecorners)) = [];
    splitvxs = vxs( oldvxindexes, : );
    h = patch( 'Faces', splitfaces, ...
               'Vertices', splitvxs, ...
               'FaceVertexCData', colors, ...
               'FaceColor', 'interp', ...
               'EdgeColor', [0 0 0], ...
               'LineStyle', '-', ...
               'Marker', 'none', ...
               'Userdata', struct( 'vxindex', oldvxindexes ), ...
               varargin{:} );
%     h = patch( 'Faces', faces, ...
%                'Vertices', vxs, ...
%                'CData', colors, ...
%                'FaceColor', 'interp', ...
%                'EdgeColor', [0 0 0], ...
%                'LineStyle', '-', ...
%                'Marker', 'none', ...
%                varargin{:} );


%     vertexColorPerCorner = colorPerVertex( oldvxindexes, : );
%     faceColorPerCorner = colorPerFace( facecorners, : );
end

